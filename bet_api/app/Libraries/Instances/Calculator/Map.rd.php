<?php
/*
 >> Information

    Title		: GPS Map (WGS84)
    Revision	: 1.0.0
    Notes		:

    Revision History:
    When			Create		When		Edit		Description
    ---------------------------------------------------------------------------
    09-14-2020		Poen		11-27-2020	Poen		Code maintenance.
    ---------------------------------------------------------------------------

 >> About

    file > (app/Libraries/Instances/Calculator/Map.php) :
    The functional base class.

    Use Laravel redis mechanism to store driver dynamic processing.

    file > (config/map.php) :
    The redis driver about config.

 >> Note
    
    Redis geographic storage coordinates will perform floating-point precision arithmetic storage, which will cause the coordinates to differ from actual ones.

    The coordinate difference generated by redis geographic storage coordinates is about 10 ~ 30 cm.

 >> Learn

    Usage 1 :
    Put the landmark of the map landmarks.

    Example :
    --------------------------------------------------------------------------
    use App\Libraries\Instances\Calculator\Map;

    $map = new Map('moments');
    $map->put(1, 25.0341971, 121.5645381, ['note' => 'test 1']);
    $map->put(2, 25.0341971, 121.5645481, ['note' => 'test 2']);
    $map->save();

    Usage 2 :
    Get the landmark latitude and longitude of the map landmarks.

    Example :
    --------------------------------------------------------------------------
    use App\Libraries\Instances\Calculator\Map;

    $map = new Map('moments');
    $map->put(1, 25.0341971, 121.5645381, ['note' => 'test 1']);
    $map->put(2, 25.0341971, 121.5645481, ['note' => 'test 2']);
    $map->save();
    $map->get([1, 2]);

    Usage 3 :
    Remove the landmark latitude and longitude of the map landmarks.

    Example :
    --------------------------------------------------------------------------
    use App\Libraries\Instances\Calculator\Map;

    $map = new Map('moments');
    $map->put(1, 25.0341971, 121.5645381, ['note' => 'test 1']);
    $map->put(2, 25.0341971, 121.5645481, ['note' => 'test 2']);
    $map->save();
    $map->remove([1, 2]);

    Usage 4 :
    Measure the moving distance in meters based on the landmarks.

    Example :
    --------------------------------------------------------------------------
    use App\Libraries\Instances\Calculator\Map;

    $map = new Map('moments');
    $map->put(1, 25.0341971, 121.5645381, ['note' => 'test 1']);
    $map->put(2, 25.0341971, 121.5645481, ['note' => 'test 2']);
    $map->save();
    $map->distanceByLandmark(1, 2);

    Usage 5 :
    Use the landmark radar to search for landmark information on the map through the radius distance unit meter by landmark.

    Example :
    --------------------------------------------------------------------------
    use App\Libraries\Instances\Calculator\Map;

    $map = new Map('moments');
    $map->put(1, 25.0341971, 121.5645381, ['note' => 'test 1']);
    $map->put(2, 25.0341971, 121.5645481, ['note' => 'test 2']);
    $map->save();
    $map->radarByLandmark(1, 100);

    Usage 6 :
    Use the coordinate radar to search for landmark information on the map through the radius distance unit meter.

    Example :
    --------------------------------------------------------------------------
    use App\Libraries\Instances\Calculator\Map;

    $map = new Map('moments');
    $map->put(1, 25.0341971, 121.5645381, ['note' => 'test 1']);
    $map->put(2, 25.0341971, 121.5645481, ['note' => 'test 2']);
    $map->save();
    $map->radarByCoordinate(25.0341971, 121.5645381, 100);

*/    
